-- Create coins table
create table if not exists public.coins (
  id text primary key,
  symbol text not null,
  name text not null,
  contract_address jsonb,
  market_cap bigint,
  rank integer,
  telegram text,
  twitter text,
  github text,
  other_socials jsonb,
  last_updated timestamp with time zone not null default now(),
  
  -- Constraints
  constraint symbol_length check (char_length(symbol) <= 20),
  constraint name_length check (char_length(name) <= 100)
);

CREATE TABLE IF NOT EXISTS public.social_streams (
  -- Basic info
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  coin_id text not null references public.coins(id) on delete cascade,
  source text not null,
  message text not null,
  timestamp timestamp with time zone not null default now(),
  user_role text,
  
  -- Constraints
  constraint valid_source check (source in ('telegram', 'twitter')),
  constraint message_length check (char_length(message) <= 2000),
  constraint user_role_length check (char_length(user_role) <= 50)
);

-- Create indexes
create index if not exists coins_symbol_idx on public.coins (symbol);
create index if not exists coins_rank_idx on public.coins (rank);
create index if not exists coins_market_cap_idx on public.coins (market_cap);
create index if not exists social_streams_coin_source_time_idx 
  on public.social_streams (coin_id, source, timestamp desc);

-- Enable RLS
alter table public.coins enable row level security;
alter table public.social_streams enable row level security;

-- Allow anonymous read access
create policy "Allow anonymous read access on coins"
  on public.coins for select
  to anon
  using (true);

create policy "Allow anonymous read access on social_streams"
  on public.social_streams for select
  to anon
  using (true);